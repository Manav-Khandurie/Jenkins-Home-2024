<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3883.vb_3ff2a_e3eea_f">
    <script>def COLOR_MAP = [
    &apos;SUCCESS&apos;: &apos;good&apos;, 
    &apos;FAILURE&apos;: &apos;danger&apos;,
]

pipeline {
    agent any
    tools {
        maven &quot;MAVEN3&quot;
        jdk &quot;OracleJDK8&quot;
    }

    environment {
        registryCredential = &apos;ecr:us-east-1:awsiamuser&apos;
        appRegistry = &quot;247477386084.dkr.ecr.us-east-1.amazonaws.com/manav-ecr-repo&quot;
        vprofileRegistry = &quot;https://247477386084.dkr.ecr.us-east-1.amazonaws.com/&quot;
        cluster = &quot;vprofile&quot;
        service = &quot;vprofileappsvc&quot;
        slack_channel = &quot;my-proj-cicd&quot; 
        criticalityThreshold = 80
        trivyReportPath = &quot;${env.WORKSPACE}/trivy_report.json&quot;
    }

    stages {
        stage(&apos;Fetch code&apos;) {
            steps {
                git branch: &apos;docker&apos;, url: &apos;https://github.com/devopshydclub/vprofile-project.git&apos;
            }
        }

        stage(&apos;Test&apos;) {
            steps {
                sh &apos;mvn test&apos;
            }
        }

        stage(&apos;Generate Surefire Reports&apos;) {
            steps {
                script {
                    sh &apos;mvn surefire-report:report&apos;
                }
                junit &apos;target/surefire-reports/**/*.xml&apos;
            }
        }

        stage(&apos;Build App Image&apos;) {
            steps {
                script {
                    dockerImage = docker.build( appRegistry + &quot;:$BUILD_NUMBER&quot;, &quot;./Docker-files/app/multistage/&quot;)
                }
            }
        }

        stage(&apos;Trivy Vulnerability Scan&apos;) {
            steps {
                script {
                    echo &quot;${env.WORKSPACE}&quot;
                    sh &quot;trivy image ${appRegistry}:${BUILD_NUMBER} --severity CRITICAL --no-progress --format json &gt; ${trivyReportPath}&quot;
                }
            }
        }
        stage(&apos;Print Workspace Contents&apos;) {
            steps {
                sh &quot;ls -al ${env.WORKSPACE}&quot;
            }
        }

        stage(&apos;Trivy Report Upload to Slack&apos;) {
            steps {
                script {
                    slackSend channel: slack_channel, message: &quot;Trivy scan report for ${appRegistry}:${BUILD_NUMBER}&quot;
                    slackUploadFile channel: slack_channel, filePath: &quot;${env.WORKSPACE}/trivy_report.json&quot;                
                }
            }
        }


        stage(&apos;Upload App Image&apos;) {
            steps {
                script {
                    docker.withRegistry( vprofileRegistry, registryCredential ) {
                        dockerImage.push(&quot;$BUILD_NUMBER&quot;)
                        dockerImage.push(&apos;latest&apos;)
                    }
                }
            }
        }
    }

    post {
        always {
            echo &apos;Slack Notifications.&apos;
            slackSend channel: slack_channel, 
                color: COLOR_MAP[currentBuild.currentResult],
                message: &quot;*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}&quot;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>