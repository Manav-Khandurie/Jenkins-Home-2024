<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3883.vb_3ff2a_e3eea_f">
    <script>def COLOR_MAP = [
    &apos;SUCCESS&apos;: &apos;good&apos;, 
    &apos;FAILURE&apos;: &apos;danger&apos;,
    &apos;REPORT&apos;: &apos;#FFFF00&apos;
]

pipeline {
    agent any
    tools {
        maven &quot;MAVEN3&quot;
        jdk &quot;OracleJDK8&quot;
    }

    environment {
        registryCredential = &apos;ecr:us-east-1:awsiamuser&apos;
        appRegistry = &quot;247477386084.dkr.ecr.us-east-1.amazonaws.com/manav-ecr-repo&quot;
        vprofileRegistry = &quot;https://247477386084.dkr.ecr.us-east-1.amazonaws.com/&quot;
        cluster = &quot;vprofile&quot;
        service = &quot;vprofileappsvc&quot;
        slack_channel = &quot;my-proj-cicd&quot; 
    }

    stages {
        stage(&apos;Fetch code&apos;) {
            steps {
                git branch: &apos;docker&apos;, url: &apos;https://github.com/devopshydclub/vprofile-project.git&apos;
            }
        }

        stage(&apos;Test&apos;) {
            steps {
                sh &apos;mvn test&apos;
            }
        }

        stage(&apos;Generate Surefire Reports&apos;) {
            steps {
                script {
                    sh &apos;mvn surefire-report:report&apos;
                }
                junit &apos;target/surefire-reports/**/*.xml&apos;
            }
        }

        stage(&apos;Upload Surefire Reports to Slack&apos;) {
            steps {
                slackUploadFile filePath: &apos;target/site/surefire-report.html&apos;, initialComment: &apos;Here is your file&apos;
                // script {
                //     def reportPath = &quot;${WORKSPACE}/target/site/surefire-report.html&quot;
                //     def fileName = &apos;surefire-report.html&apos;
                //     //echo &quot;~~~ $reportpath&quot;
                //     slackSend(
                //         channel: slack_channel,
                //         message: &quot;Surefire Reports for ${env.JOB_NAME} build ${env.BUILD_NUMBER}&quot;,
                //         attachments: [
                //             [
                //                 title: fileName,
                //                 text: &quot;Surefire Report&quot;,
                //                 color: COLOR_MAP[&apos;REPORT&apos;],
                //                 file: reportPath, // Directly specify the file path
                //                 fileType: &apos;html&apos;
                //             ]
                //         ],
                //         tokenCredentialId: &quot;Slack_Token_jenkins-cicd-lab.slack.com&quot;
                //     )
                // }
            }
        }
    }

    post {
        always {
            echo &apos;Slack Notifications.&apos;
            slackSend channel: slack_channel, 
                color: COLOR_MAP[currentBuild.currentResult],
                message: &quot;*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}&quot;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>